# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

THIRDPARTY_PROTOBUF_SUBSYS_NAME = "thirdparty"
THIRDPARTY_PROTOBUF_PART_NAME = "protobuf"

config("protobuf_config") {
  include_dirs = [
    "src",
    "third_party/abseil-cpp",
    "third_party/utf8_range",
  ]
  cflags = [ "-Wno-gcc-compat" ]
}

ohos_shared_library("protobuf_lite") {
  branch_protector_ret = "pac_ret"
  sources = [
    "src/google/protobuf/any_lite.cc",
    "src/google/protobuf/arena.cc",
    "src/google/protobuf/arena_align.cc",
    "src/google/protobuf/arenastring.cc",
    "src/google/protobuf/arenaz_sampler.cc",
    "src/google/protobuf/extension_set.cc",
    "src/google/protobuf/generated_enum_util.cc",
    "src/google/protobuf/generated_message_tctable_lite.cc",
    "src/google/protobuf/generated_message_util.cc",
    "src/google/protobuf/implicit_weak_message.cc",
    "src/google/protobuf/inlined_string_field.cc",
    "src/google/protobuf/io/coded_stream.cc",
    "src/google/protobuf/io/io_win32.cc",
    "src/google/protobuf/io/zero_copy_stream.cc",
    "src/google/protobuf/io/zero_copy_stream_impl.cc",
    "src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
    "src/google/protobuf/map.cc",
    "src/google/protobuf/message_lite.cc",
    "src/google/protobuf/parse_context.cc",
    "src/google/protobuf/port.cc",
    "src/google/protobuf/raw_ptr.cc",
    "src/google/protobuf/repeated_field.cc",
    "src/google/protobuf/repeated_ptr_field.cc",
    "src/google/protobuf/stubs/common.cc",
    "src/google/protobuf/wire_format_lite.cc",
    "third_party/utf8_range/utf8_range.c",
    "third_party/utf8_range/utf8_validity.cc",
  ]

  include_dirs = [
    "src/google/protobuf/**/*.h",
    "src/google/protobuf/**/*.inc",
    "src",
    "third_party/utf8_range",
  ]
  if (!is_mingw) {
    external_deps = [ "abseil-cpp:absl_base_static" ]
  } else {
    defines = [ "_FILE_OFFSET_BITS_SET_LSEEK" ]
  }

  cflags_cc = [ "-Wno-sign-compare" ]
  cflags = [
    "-Wno-sign-compare",
    "-D HAVE_PTHREAD",
  ]

  public_configs = [ ":protobuf_config" ]
  install_enable = true
  innerapi_tags = [
    "platformsdk_indirect",
    "chipsetsdk_sp",
  ]
  subsystem_name = "${THIRDPARTY_PROTOBUF_SUBSYS_NAME}"
  part_name = "${THIRDPARTY_PROTOBUF_PART_NAME}"
}

ohos_static_library("protobuf_lite_static") {
  sources = [
    "src/google/protobuf/any.cc",
    "src/google/protobuf/any_lite.cc",
    "src/google/protobuf/arena.cc",
    "src/google/protobuf/arena_align.cc",
    "src/google/protobuf/arenastring.cc",
    "src/google/protobuf/arenaz_sampler.cc",
    "src/google/protobuf/cpp_features.pb.cc",
    "src/google/protobuf/descriptor.cc",
    "src/google/protobuf/descriptor.pb.cc",
    "src/google/protobuf/descriptor_database.cc",
    "src/google/protobuf/dynamic_message.cc",
    "src/google/protobuf/extension_set.cc",
    "src/google/protobuf/extension_set_heavy.cc",
    "src/google/protobuf/feature_resolver.cc",
    "src/google/protobuf/generated_enum_util.cc",
    "src/google/protobuf/generated_message_reflection.cc",
    "src/google/protobuf/generated_message_tctable_full.cc",
    "src/google/protobuf/generated_message_tctable_gen.cc",
    "src/google/protobuf/generated_message_tctable_lite.cc",
    "src/google/protobuf/generated_message_util.cc",
    "src/google/protobuf/implicit_weak_message.cc",
    "src/google/protobuf/inlined_string_field.cc",
    "src/google/protobuf/io/coded_stream.cc",
    "src/google/protobuf/io/io_win32.cc",
    "src/google/protobuf/io/strtod.cc",
    "src/google/protobuf/io/tokenizer.cc",
    "src/google/protobuf/io/zero_copy_stream.cc",
    "src/google/protobuf/io/zero_copy_stream_impl.cc",
    "src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
    "src/google/protobuf/map.cc",
    "src/google/protobuf/map_field.cc",
    "src/google/protobuf/message.cc",
    "src/google/protobuf/message_lite.cc",
    "src/google/protobuf/parse_context.cc",
    "src/google/protobuf/port.cc",
    "src/google/protobuf/raw_ptr.cc",
    "src/google/protobuf/reflection_mode.cc",
    "src/google/protobuf/reflection_ops.cc",
    "src/google/protobuf/repeated_field.cc",
    "src/google/protobuf/repeated_ptr_field.cc",
    "src/google/protobuf/stubs/common.cc",
    "src/google/protobuf/text_format.cc",
    "src/google/protobuf/unknown_field_set.cc",
    "src/google/protobuf/wire_format.cc",
    "src/google/protobuf/wire_format_lite.cc",
    "third_party/utf8_range/utf8_range.c",
    "third_party/utf8_range/utf8_validity.cc",
  ]
  include_dirs = [
    "src/google/protobuf/**/*.h",
    "src/google/protobuf/**/*.inc",
    "src",
    "third_party/utf8_range",
  ]
  if (!is_mingw) {
    # target build, not host build
    defines = [ "HAVE_HILOG" ]
  } else {
    defines = [ "_FILE_OFFSET_BITS_SET_LSEEK" ]
  }
  if (is_arkui_x) {
    deps = [ "//third_party/abseil-cpp:absl_base_static" ]
  } else {
    external_deps = [ "abseil-cpp:absl_base_static" ]
  }
  cflags_cc = [
    "-Wno-sign-compare",
    "-Wno-deprecated-declarations",
  ]
  cflags = [
    "-Wno-deprecated-declarations",
    "-Wno-sign-compare",
    "-Wno-gcc-compat",
    "-D HAVE_PTHREAD",
  ]
  if (is_mingw) {
    # ../../third_party/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc:60:9: error: 'lseek' macro redefined [-Werror,-Wmacro-redefined]
    cflags += [ "-Wno-macro-redefined" ]
  }
  public_configs = [ ":protobuf_config" ]
  subsystem_name = "${THIRDPARTY_PROTOBUF_SUBSYS_NAME}"
  part_name = "${THIRDPARTY_PROTOBUF_PART_NAME}"
}

ohos_shared_library("protobuf") {
  sources = [
    "src/google/protobuf/any.cc",
    "src/google/protobuf/any.pb.cc",
    "src/google/protobuf/any_lite.cc",
    "src/google/protobuf/api.pb.cc",
    "src/google/protobuf/arena.cc",
    "src/google/protobuf/arena_align.cc",
    "src/google/protobuf/arenastring.cc",
    "src/google/protobuf/arenaz_sampler.cc",
    "src/google/protobuf/compiler/importer.cc",
    "src/google/protobuf/compiler/parser.cc",
    "src/google/protobuf/cpp_features.pb.cc",
    "src/google/protobuf/descriptor.cc",
    "src/google/protobuf/descriptor.pb.cc",
    "src/google/protobuf/descriptor_database.cc",
    "src/google/protobuf/duration.pb.cc",
    "src/google/protobuf/dynamic_message.cc",
    "src/google/protobuf/empty.pb.cc",
    "src/google/protobuf/extension_set.cc",
    "src/google/protobuf/extension_set_heavy.cc",
    "src/google/protobuf/feature_resolver.cc",
    "src/google/protobuf/field_mask.pb.cc",
    "src/google/protobuf/generated_enum_util.cc",
    "src/google/protobuf/generated_message_bases.cc",
    "src/google/protobuf/generated_message_reflection.cc",
    "src/google/protobuf/generated_message_tctable_full.cc",
    "src/google/protobuf/generated_message_tctable_gen.cc",
    "src/google/protobuf/generated_message_tctable_lite.cc",
    "src/google/protobuf/generated_message_util.cc",
    "src/google/protobuf/implicit_weak_message.cc",
    "src/google/protobuf/inlined_string_field.cc",
    "src/google/protobuf/io/coded_stream.cc",
    "src/google/protobuf/io/gzip_stream.cc",
    "src/google/protobuf/io/io_win32.cc",
    "src/google/protobuf/io/printer.cc",
    "src/google/protobuf/io/strtod.cc",
    "src/google/protobuf/io/tokenizer.cc",
    "src/google/protobuf/io/zero_copy_sink.cc",
    "src/google/protobuf/io/zero_copy_stream.cc",
    "src/google/protobuf/io/zero_copy_stream_impl.cc",
    "src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
    "src/google/protobuf/json/internal/lexer.cc",
    "src/google/protobuf/json/internal/message_path.cc",
    "src/google/protobuf/json/internal/parser.cc",
    "src/google/protobuf/json/internal/unparser.cc",
    "src/google/protobuf/json/internal/untyped_message.cc",
    "src/google/protobuf/json/internal/writer.cc",
    "src/google/protobuf/json/internal/zero_copy_buffered_stream.cc",
    "src/google/protobuf/json/json.cc",
    "src/google/protobuf/map.cc",
    "src/google/protobuf/map_field.cc",
    "src/google/protobuf/message.cc",
    "src/google/protobuf/message_lite.cc",
    "src/google/protobuf/parse_context.cc",
    "src/google/protobuf/port.cc",
    "src/google/protobuf/raw_ptr.cc",
    "src/google/protobuf/reflection_mode.cc",
    "src/google/protobuf/reflection_ops.cc",
    "src/google/protobuf/repeated_field.cc",
    "src/google/protobuf/repeated_ptr_field.cc",
    "src/google/protobuf/service.cc",
    "src/google/protobuf/source_context.pb.cc",
    "src/google/protobuf/struct.pb.cc",
    "src/google/protobuf/stubs/common.cc",
    "src/google/protobuf/text_format.cc",
    "src/google/protobuf/timestamp.pb.cc",
    "src/google/protobuf/type.pb.cc",
    "src/google/protobuf/unknown_field_set.cc",
    "src/google/protobuf/util/delimited_message_util.cc",
    "src/google/protobuf/util/field_comparator.cc",
    "src/google/protobuf/util/field_mask_util.cc",
    "src/google/protobuf/util/message_differencer.cc",
    "src/google/protobuf/util/time_util.cc",
    "src/google/protobuf/util/type_resolver_util.cc",
    "src/google/protobuf/wire_format.cc",
    "src/google/protobuf/wire_format_lite.cc",
    "src/google/protobuf/wrappers.pb.cc",
    "third_party/utf8_range/utf8_validity.cc",
    "third_party/utf8_range/utf8_range.c",
  ]
  include_dirs = [
    "src/google/protobuf/**/*.h",
    "src/google/protobuf/**/*.inc",
    "src",
    "third_party/utf8_range",
  ]
  cflags_cc = [
    "-Wno-sign-compare",
    "-Wno-deprecated-declarations",
  ]
  cflags = [
    "-Wno-sign-compare",
    "-D HAVE_PTHREAD",
    "-Wno-deprecated-declarations",
  ]
  external_deps = [ "abseil-cpp:absl_base_static" ]
  public_configs = [ ":protobuf_config" ]
  install_enable = true
  subsystem_name = "${THIRDPARTY_PROTOBUF_SUBSYS_NAME}"
  part_name = "${THIRDPARTY_PROTOBUF_PART_NAME}"
}

group("protobuf_static_toolchain") {
  deps = [
    ":protobuf_static",
    ":protobuf_static(${host_toolchain})"
  ]
}

ohos_static_library("protobuf_static") {
  sources = [
    "src/google/protobuf/any.cc",
    "src/google/protobuf/any.pb.cc",
    "src/google/protobuf/any_lite.cc",
    "src/google/protobuf/api.pb.cc",
    "src/google/protobuf/arena.cc",
    "src/google/protobuf/arena_align.cc",
    "src/google/protobuf/arenastring.cc",
    "src/google/protobuf/arenaz_sampler.cc",
    "src/google/protobuf/compiler/importer.cc",
    "src/google/protobuf/compiler/parser.cc",
    "src/google/protobuf/cpp_features.pb.cc",
    "src/google/protobuf/descriptor.cc",
    "src/google/protobuf/descriptor.pb.cc",
    "src/google/protobuf/descriptor_database.cc",
    "src/google/protobuf/duration.pb.cc",
    "src/google/protobuf/dynamic_message.cc",
    "src/google/protobuf/empty.pb.cc",
    "src/google/protobuf/extension_set.cc",
    "src/google/protobuf/extension_set_heavy.cc",
    "src/google/protobuf/feature_resolver.cc",
    "src/google/protobuf/field_mask.pb.cc",
    "src/google/protobuf/generated_enum_util.cc",
    "src/google/protobuf/generated_message_bases.cc",
    "src/google/protobuf/generated_message_reflection.cc",
    "src/google/protobuf/generated_message_tctable_full.cc",
    "src/google/protobuf/generated_message_tctable_gen.cc",
    "src/google/protobuf/generated_message_tctable_lite.cc",
    "src/google/protobuf/generated_message_util.cc",
    "src/google/protobuf/implicit_weak_message.cc",
    "src/google/protobuf/inlined_string_field.cc",
    "src/google/protobuf/io/coded_stream.cc",
    "src/google/protobuf/io/gzip_stream.cc",
    "src/google/protobuf/io/io_win32.cc",
    "src/google/protobuf/io/printer.cc",
    "src/google/protobuf/io/strtod.cc",
    "src/google/protobuf/io/tokenizer.cc",
    "src/google/protobuf/io/zero_copy_sink.cc",
    "src/google/protobuf/io/zero_copy_stream.cc",
    "src/google/protobuf/io/zero_copy_stream_impl.cc",
    "src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
    "src/google/protobuf/json/internal/lexer.cc",
    "src/google/protobuf/json/internal/message_path.cc",
    "src/google/protobuf/json/internal/parser.cc",
    "src/google/protobuf/json/internal/unparser.cc",
    "src/google/protobuf/json/internal/untyped_message.cc",
    "src/google/protobuf/json/internal/writer.cc",
    "src/google/protobuf/json/internal/zero_copy_buffered_stream.cc",
    "src/google/protobuf/json/json.cc",
    "src/google/protobuf/map.cc",
    "src/google/protobuf/map_field.cc",
    "src/google/protobuf/message.cc",
    "src/google/protobuf/message_lite.cc",
    "src/google/protobuf/parse_context.cc",
    "src/google/protobuf/port.cc",
    "src/google/protobuf/raw_ptr.cc",
    "src/google/protobuf/reflection_mode.cc",
    "src/google/protobuf/reflection_ops.cc",
    "src/google/protobuf/repeated_field.cc",
    "src/google/protobuf/repeated_ptr_field.cc",
    "src/google/protobuf/service.cc",
    "src/google/protobuf/source_context.pb.cc",
    "src/google/protobuf/struct.pb.cc",
    "src/google/protobuf/stubs/common.cc",
    "src/google/protobuf/text_format.cc",
    "src/google/protobuf/timestamp.pb.cc",
    "src/google/protobuf/type.pb.cc",
    "src/google/protobuf/unknown_field_set.cc",
    "src/google/protobuf/util/delimited_message_util.cc",
    "src/google/protobuf/util/field_comparator.cc",
    "src/google/protobuf/util/field_mask_util.cc",
    "src/google/protobuf/util/message_differencer.cc",
    "src/google/protobuf/util/time_util.cc",
    "src/google/protobuf/util/type_resolver_util.cc",
    "src/google/protobuf/wire_format.cc",
    "src/google/protobuf/wire_format_lite.cc",
    "src/google/protobuf/wrappers.pb.cc",
    "third_party/utf8_range/utf8_validity.cc",
  ]
  include_dirs = [
    "src/google/protobuf/**/*.h",
    "src/google/protobuf/**/*.inc",
    "src",
    "third_party/utf8_range",
  ]
  cflags_cc = [
    "-Wno-sign-compare",
    "-Wno-deprecated-declarations",
  ]
  cflags = [
    "-Wno-sign-compare",
    "-D HAVE_PTHREAD",
    "-Wno-deprecated-declarations",
    "-Wno-gcc-compat",
  ]

  deps = [ ":protobuf_lite_static" ]
  if (is_arkui_x) {
    deps += [ "//third_party/abseil-cpp:absl_base_static" ]
  } else {
    external_deps = [ "abseil-cpp:absl_base_static" ]
  }

  if (is_mingw) {
    # ../../third_party/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc:60:9: error: 'lseek' macro redefined [-Werror,-Wmacro-redefined]
    cflags += [ "-Wno-macro-redefined" ]
  }

  public_configs = [ ":protobuf_config" ]
  subsystem_name = "${THIRDPARTY_PROTOBUF_SUBSYS_NAME}"
  part_name = "${THIRDPARTY_PROTOBUF_PART_NAME}"
}

ohos_shared_library("protoc_lib") {
  sources = [
    "src/google/protobuf/compiler/code_generator.cc",
    "src/google/protobuf/compiler/code_generator_lite.cc",
    "src/google/protobuf/compiler/command_line_interface.cc",
    "src/google/protobuf/compiler/cpp/enum.cc",
    "src/google/protobuf/compiler/cpp/extension.cc",
    "src/google/protobuf/compiler/cpp/field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/cord_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/enum_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/map_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/message_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/primitive_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/string_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/string_view_field.cc",
    "src/google/protobuf/compiler/cpp/file.cc",
    "src/google/protobuf/compiler/cpp/generator.cc",
    "src/google/protobuf/compiler/cpp/helpers.cc",
    "src/google/protobuf/compiler/cpp/ifndef_guard.cc",
    "src/google/protobuf/compiler/cpp/message.cc",
    "src/google/protobuf/compiler/cpp/namespace_printer.cc",
    "src/google/protobuf/compiler/cpp/padding_optimizer.cc",
    "src/google/protobuf/compiler/cpp/parse_function_generator.cc",
    "src/google/protobuf/compiler/cpp/service.cc",
    "src/google/protobuf/compiler/cpp/tracker.cc",
    "src/google/protobuf/compiler/csharp/csharp_doc_comment.cc",
    "src/google/protobuf/compiler/csharp/csharp_enum.cc",
    "src/google/protobuf/compiler/csharp/csharp_enum_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_field_base.cc",
    "src/google/protobuf/compiler/csharp/csharp_generator.cc",
    "src/google/protobuf/compiler/csharp/csharp_helpers.cc",
    "src/google/protobuf/compiler/csharp/csharp_map_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_message.cc",
    "src/google/protobuf/compiler/csharp/csharp_message_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_primitive_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_reflection_class.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_enum_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_message_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_primitive_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_source_generator_base.cc",
    "src/google/protobuf/compiler/csharp/csharp_wrapper_field.cc",
    "src/google/protobuf/compiler/csharp/names.cc",
    "src/google/protobuf/compiler/java/context.cc",
    "src/google/protobuf/compiler/java/doc_comment.cc",
    "src/google/protobuf/compiler/java/field_common.cc",
    "src/google/protobuf/compiler/java/file.cc",
    "src/google/protobuf/compiler/java/full/enum.cc",
    "src/google/protobuf/compiler/java/full/enum_field.cc",
    "src/google/protobuf/compiler/java/full/extension.cc",
    "src/google/protobuf/compiler/java/full/generator_factory.cc",
    "src/google/protobuf/compiler/java/full/make_field_gens.cc",
    "src/google/protobuf/compiler/java/full/map_field.cc",
    "src/google/protobuf/compiler/java/full/message.cc",
    "src/google/protobuf/compiler/java/full/message_builder.cc",
    "src/google/protobuf/compiler/java/full/message_field.cc",
    "src/google/protobuf/compiler/java/full/primitive_field.cc",
    "src/google/protobuf/compiler/java/full/service.cc",
    "src/google/protobuf/compiler/java/full/string_field.cc",
    "src/google/protobuf/compiler/java/generator.cc",
    "src/google/protobuf/compiler/java/helpers.cc",
    "src/google/protobuf/compiler/java/internal_helpers.cc",
    "src/google/protobuf/compiler/java/java_features.pb.cc",
    "src/google/protobuf/compiler/java/lite/enum.cc",
    "src/google/protobuf/compiler/java/lite/enum_field.cc",
    "src/google/protobuf/compiler/java/lite/extension.cc",
    "src/google/protobuf/compiler/java/lite/generator_factory.cc",
    "src/google/protobuf/compiler/java/lite/make_field_gens.cc",
    "src/google/protobuf/compiler/java/lite/map_field.cc",
    "src/google/protobuf/compiler/java/lite/message.cc",
    "src/google/protobuf/compiler/java/lite/message_builder.cc",
    "src/google/protobuf/compiler/java/lite/message_field.cc",
    "src/google/protobuf/compiler/java/lite/primitive_field.cc",
    "src/google/protobuf/compiler/java/lite/string_field.cc",
    "src/google/protobuf/compiler/java/message_serialization.cc",
    "src/google/protobuf/compiler/java/name_resolver.cc",
    "src/google/protobuf/compiler/java/names.cc",
    "src/google/protobuf/compiler/java/shared_code_generator.cc",
    "src/google/protobuf/compiler/kotlin/file.cc",
    "src/google/protobuf/compiler/kotlin/generator.cc",
    "src/google/protobuf/compiler/kotlin/message.cc",
    "src/google/protobuf/compiler/objectivec/enum.cc",
    "src/google/protobuf/compiler/objectivec/enum_field.cc",
    "src/google/protobuf/compiler/objectivec/extension.cc",
    "src/google/protobuf/compiler/objectivec/field.cc",
    "src/google/protobuf/compiler/objectivec/file.cc",
    "src/google/protobuf/compiler/objectivec/generator.cc",
    "src/google/protobuf/compiler/objectivec/helpers.cc",
    "src/google/protobuf/compiler/objectivec/import_writer.cc",
    "src/google/protobuf/compiler/objectivec/line_consumer.cc",
    "src/google/protobuf/compiler/objectivec/map_field.cc",
    "src/google/protobuf/compiler/objectivec/message.cc",
    "src/google/protobuf/compiler/objectivec/message_field.cc",
    "src/google/protobuf/compiler/objectivec/names.cc",
    "src/google/protobuf/compiler/objectivec/oneof.cc",
    "src/google/protobuf/compiler/objectivec/primitive_field.cc",
    "src/google/protobuf/compiler/objectivec/tf_decode_data.cc",
    "src/google/protobuf/compiler/php/names.cc",
    "src/google/protobuf/compiler/php/php_generator.cc",
    "src/google/protobuf/compiler/plugin.cc",
    "src/google/protobuf/compiler/plugin.pb.cc",
    "src/google/protobuf/compiler/python/generator.cc",
    "src/google/protobuf/compiler/python/helpers.cc",
    "src/google/protobuf/compiler/python/pyi_generator.cc",
    "src/google/protobuf/compiler/retention.cc",
    "src/google/protobuf/compiler/ruby/ruby_generator.cc",
    "src/google/protobuf/compiler/rust/accessors/accessor_case.cc",
    "src/google/protobuf/compiler/rust/accessors/accessors.cc",
    "src/google/protobuf/compiler/rust/accessors/default_value.cc",
    "src/google/protobuf/compiler/rust/accessors/map.cc",
    "src/google/protobuf/compiler/rust/accessors/repeated_field.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_cord.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_message.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_scalar.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_string.cc",
    "src/google/protobuf/compiler/rust/accessors/unsupported_field.cc",
    "src/google/protobuf/compiler/rust/accessors/with_presence.cc",
    "src/google/protobuf/compiler/rust/context.cc",
    "src/google/protobuf/compiler/rust/crate_mapping.cc",
    "src/google/protobuf/compiler/rust/enum.cc",
    "src/google/protobuf/compiler/rust/generator.cc",
    "src/google/protobuf/compiler/rust/message.cc",
    "src/google/protobuf/compiler/rust/naming.cc",
    "src/google/protobuf/compiler/rust/oneof.cc",
    "src/google/protobuf/compiler/rust/relative_path.cc",
    "src/google/protobuf/compiler/rust/rust_field_type.cc",
    "src/google/protobuf/compiler/rust/rust_keywords.cc",
    "src/google/protobuf/compiler/rust/upb_helpers.cc",
    "src/google/protobuf/compiler/subprocess.cc",
    "src/google/protobuf/compiler/versions.cc",
    "src/google/protobuf/compiler/zip_writer.cc",
    "src/google/protobuf/testing/file.cc",
    "third_party/utf8_range/utf8_validity.cc",
    "upb_generator/common/names.cc",
    "upb_generator/minitable/names.cc",
    "upb_generator/minitable/names_internal.cc",
  ]
  include_dirs = [
    "src/google/protobuf/**/*.h",
    "src/google/protobuf/**/*.inc",
    "src",
    "third_party/utf8_range",
    "//third_party/protobuf",
  ]
  cflags_cc = [
    "-Wno-sign-compare",
    "-Wno-unused-function",
    "-Wno-unused-private-field",
    "-Wno-deprecated-declarations",
  ]
  cflags = [
    "-Wno-sign-compare",
    "-D HAVE_PTHREAD",
    "-Wno-unused-function",
    "-Wno-deprecated-declarations",
  ]

  deps = [
    ":protobuf",
    ":protobuf_lite",
  ]
  external_deps = [ "abseil-cpp:absl_base_static" ]
  install_enable = false
  public_configs = [ ":protobuf_config" ]
  subsystem_name = "${THIRDPARTY_PROTOBUF_SUBSYS_NAME}"
  part_name = "${THIRDPARTY_PROTOBUF_PART_NAME}"
}

ohos_static_library("protoc_static_lib") {
  sources = [
    "src/google/protobuf/compiler/code_generator.cc",
    "src/google/protobuf/compiler/code_generator_lite.cc",
    "src/google/protobuf/compiler/command_line_interface.cc",
    "src/google/protobuf/compiler/cpp/enum.cc",
    "src/google/protobuf/compiler/cpp/extension.cc",
    "src/google/protobuf/compiler/cpp/field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/cord_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/enum_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/map_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/message_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/primitive_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/string_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/string_view_field.cc",
    "src/google/protobuf/compiler/cpp/file.cc",
    "src/google/protobuf/compiler/cpp/generator.cc",
    "src/google/protobuf/compiler/cpp/helpers.cc",
    "src/google/protobuf/compiler/cpp/ifndef_guard.cc",
    "src/google/protobuf/compiler/cpp/message.cc",
    "src/google/protobuf/compiler/cpp/namespace_printer.cc",
    "src/google/protobuf/compiler/cpp/padding_optimizer.cc",
    "src/google/protobuf/compiler/cpp/parse_function_generator.cc",
    "src/google/protobuf/compiler/cpp/service.cc",
    "src/google/protobuf/compiler/cpp/tracker.cc",
    "src/google/protobuf/compiler/csharp/csharp_doc_comment.cc",
    "src/google/protobuf/compiler/csharp/csharp_enum.cc",
    "src/google/protobuf/compiler/csharp/csharp_enum_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_field_base.cc",
    "src/google/protobuf/compiler/csharp/csharp_generator.cc",
    "src/google/protobuf/compiler/csharp/csharp_helpers.cc",
    "src/google/protobuf/compiler/csharp/csharp_map_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_message.cc",
    "src/google/protobuf/compiler/csharp/csharp_message_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_primitive_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_reflection_class.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_enum_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_message_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_primitive_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_source_generator_base.cc",
    "src/google/protobuf/compiler/csharp/csharp_wrapper_field.cc",
    "src/google/protobuf/compiler/csharp/names.cc",
    "src/google/protobuf/compiler/java/context.cc",
    "src/google/protobuf/compiler/java/doc_comment.cc",
    "src/google/protobuf/compiler/java/field_common.cc",
    "src/google/protobuf/compiler/java/file.cc",
    "src/google/protobuf/compiler/java/full/enum.cc",
    "src/google/protobuf/compiler/java/full/enum_field.cc",
    "src/google/protobuf/compiler/java/full/extension.cc",
    "src/google/protobuf/compiler/java/full/generator_factory.cc",
    "src/google/protobuf/compiler/java/full/make_field_gens.cc",
    "src/google/protobuf/compiler/java/full/map_field.cc",
    "src/google/protobuf/compiler/java/full/message.cc",
    "src/google/protobuf/compiler/java/full/message_builder.cc",
    "src/google/protobuf/compiler/java/full/message_field.cc",
    "src/google/protobuf/compiler/java/full/primitive_field.cc",
    "src/google/protobuf/compiler/java/full/service.cc",
    "src/google/protobuf/compiler/java/full/string_field.cc",
    "src/google/protobuf/compiler/java/generator.cc",
    "src/google/protobuf/compiler/java/helpers.cc",
    "src/google/protobuf/compiler/java/internal_helpers.cc",
    "src/google/protobuf/compiler/java/java_features.pb.cc",
    "src/google/protobuf/compiler/java/lite/enum.cc",
    "src/google/protobuf/compiler/java/lite/enum_field.cc",
    "src/google/protobuf/compiler/java/lite/extension.cc",
    "src/google/protobuf/compiler/java/lite/generator_factory.cc",
    "src/google/protobuf/compiler/java/lite/make_field_gens.cc",
    "src/google/protobuf/compiler/java/lite/map_field.cc",
    "src/google/protobuf/compiler/java/lite/message.cc",
    "src/google/protobuf/compiler/java/lite/message_builder.cc",
    "src/google/protobuf/compiler/java/lite/message_field.cc",
    "src/google/protobuf/compiler/java/lite/primitive_field.cc",
    "src/google/protobuf/compiler/java/lite/string_field.cc",
    "src/google/protobuf/compiler/java/message_serialization.cc",
    "src/google/protobuf/compiler/java/name_resolver.cc",
    "src/google/protobuf/compiler/java/names.cc",
    "src/google/protobuf/compiler/java/shared_code_generator.cc",
    "src/google/protobuf/compiler/kotlin/file.cc",
    "src/google/protobuf/compiler/kotlin/generator.cc",
    "src/google/protobuf/compiler/kotlin/message.cc",
    "src/google/protobuf/compiler/objectivec/enum.cc",
    "src/google/protobuf/compiler/objectivec/enum_field.cc",
    "src/google/protobuf/compiler/objectivec/extension.cc",
    "src/google/protobuf/compiler/objectivec/field.cc",
    "src/google/protobuf/compiler/objectivec/file.cc",
    "src/google/protobuf/compiler/objectivec/generator.cc",
    "src/google/protobuf/compiler/objectivec/helpers.cc",
    "src/google/protobuf/compiler/objectivec/import_writer.cc",
    "src/google/protobuf/compiler/objectivec/line_consumer.cc",
    "src/google/protobuf/compiler/objectivec/map_field.cc",
    "src/google/protobuf/compiler/objectivec/message.cc",
    "src/google/protobuf/compiler/objectivec/message_field.cc",
    "src/google/protobuf/compiler/objectivec/names.cc",
    "src/google/protobuf/compiler/objectivec/oneof.cc",
    "src/google/protobuf/compiler/objectivec/primitive_field.cc",
    "src/google/protobuf/compiler/objectivec/tf_decode_data.cc",
    "src/google/protobuf/compiler/php/names.cc",
    "src/google/protobuf/compiler/php/php_generator.cc",
    "src/google/protobuf/compiler/plugin.cc",
    "src/google/protobuf/compiler/plugin.pb.cc",
    "src/google/protobuf/compiler/python/generator.cc",
    "src/google/protobuf/compiler/python/helpers.cc",
    "src/google/protobuf/compiler/python/pyi_generator.cc",
    "src/google/protobuf/compiler/retention.cc",
    "src/google/protobuf/compiler/ruby/ruby_generator.cc",
    "src/google/protobuf/compiler/rust/accessors/accessor_case.cc",
    "src/google/protobuf/compiler/rust/accessors/accessors.cc",
    "src/google/protobuf/compiler/rust/accessors/default_value.cc",
    "src/google/protobuf/compiler/rust/accessors/map.cc",
    "src/google/protobuf/compiler/rust/accessors/repeated_field.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_cord.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_message.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_scalar.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_string.cc",
    "src/google/protobuf/compiler/rust/accessors/unsupported_field.cc",
    "src/google/protobuf/compiler/rust/accessors/with_presence.cc",
    "src/google/protobuf/compiler/rust/context.cc",
    "src/google/protobuf/compiler/rust/crate_mapping.cc",
    "src/google/protobuf/compiler/rust/enum.cc",
    "src/google/protobuf/compiler/rust/generator.cc",
    "src/google/protobuf/compiler/rust/message.cc",
    "src/google/protobuf/compiler/rust/naming.cc",
    "src/google/protobuf/compiler/rust/oneof.cc",
    "src/google/protobuf/compiler/rust/relative_path.cc",
    "src/google/protobuf/compiler/rust/rust_field_type.cc",
    "src/google/protobuf/compiler/rust/rust_keywords.cc",
    "src/google/protobuf/compiler/rust/upb_helpers.cc",
    "src/google/protobuf/compiler/subprocess.cc",
    "src/google/protobuf/compiler/versions.cc",
    "src/google/protobuf/compiler/zip_writer.cc",
    "src/google/protobuf/testing/file.cc",
    "third_party/utf8_range/utf8_validity.cc",
    "upb_generator/common/names.cc",
    "upb_generator/minitable/names.cc",
    "upb_generator/minitable/names_internal.cc",
  ]
  include_dirs = [
    "src/google/protobuf/**/*.h",
    "src/google/protobuf/**/*.inc",
    "src",
    "third_party/utf8_range",
    "//third_party/protobuf",
  ]
  cflags_cc = [
    "-Wno-sign-compare",
    "-Wno-unused-function",
    "-Wno-unused-private-field",
    "-Wno-deprecated-declarations",
  ]
  cflags = [
    "-Wno-sign-compare",
    "-D HAVE_PTHREAD",
    "-Wno-unused-function",
    "-Wno-deprecated-declarations",
  ]

  deps = [
    ":protobuf_lite_static",
    ":protobuf_static",
  ]
  external_deps = [ "abseil-cpp:absl_base_static" ]
  public_configs = [ ":protobuf_config" ]
  subsystem_name = "${THIRDPARTY_PROTOBUF_SUBSYS_NAME}"
  part_name = "${THIRDPARTY_PROTOBUF_PART_NAME}"
}

# Only compile the plugin for the host architecture.
ohos_executable("protoc") {
  sources = [ "src/google/protobuf/compiler/main.cc" ]
  include_dirs = [
    "src/google/protobuf/**/*.h",
    "src/google/protobuf/**/*.inc",
    "src",
  ]
  deps = [ ":protoc_static_lib" ]
  cflags_cc = [
    "-Wno-sign-compare",
    "-Wno-deprecated-declarations",
  ]
  if (is_arkui_x) {
    defines = [ "ARK_UI_X" ]
    deps += [ "//third_party/abseil-cpp:absl_base_static" ]
  } else {
    external_deps = [ "abseil-cpp:absl_base_static" ]
  }
  if (is_mac || is_ios) {
    frameworks = [ "Foundation.framework" ]
  }
  cflags = [
    "-Wno-sign-compare",
    "-D HAVE_PTHREAD",
    "-Wno-deprecated-declarations",
  ]
  install_enable = false
  subsystem_name = "${THIRDPARTY_PROTOBUF_SUBSYS_NAME}"
  part_name = "${THIRDPARTY_PROTOBUF_PART_NAME}"
}
